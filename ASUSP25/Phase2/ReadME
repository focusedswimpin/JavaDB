# HW2: Question and Answer CRUD Application

## Introduction
This repository contains the **HW2 standalone Java application**, which implements **Create, Read, Update, and Delete (CRUD)** operations along with **input validation** for handling **questions and answers**. 

The project is designed based on the **provided foundational materials**, previous assignments (**HW1, TP1**), and insights gained from **Ed Discussion**. 

It includes:
- A `Question` class
- An `Answer` class
- A `Questions` class to store and manage all questions
- An `Answers` class to store and manage all answers

## Features
✔ Supports CRUD operations for **questions and answers**  
✔ Implements **input validation** for realistic data handling  
✔ Stores subsets of questions and answers dynamically  
✔ Uses **Test-Driven Development (TDD)** with well-documented test cases  
✔ Provides **UML Class Diagrams** and a **Sequence Diagram**  
✔ Built as a **Java Console Application**  

---

## Table of Contents
- [Project Structure](#project-structure)
- [User Stories](#user-stories)
- [Installation and Setup](#installation-and-setup)
- [Usage](#usage)
- [Test Cases](#test-cases)
- [UML Diagrams](#uml-diagrams)
- [Screencast](#screencast)
- [GitHub Repository](#github-repository)
- [Grading Information](#grading-information)
- [Author](#author)
- [License](#license)

---

## Project Structure


---

## User Stories
### 1️⃣ CRUD Operations for Questions and Answers
- As a **user**, I want to **create, read, update, and delete** questions.
- As a **user**, I want to **create, read, update, and delete** answers to questions.
- As a **user**, I want **validation** to ensure that **questions and answers are not empty or invalid**.

### 2️⃣ Handling Lists of Questions and Answers
- As a **user**, I want to store **all** current questions.
- As a **user**, I want to filter and retrieve **a subset of questions** based on a search.
- As a **user**, I want to store **all answers** linked to questions.
- As a **user**, I want to retrieve **a subset of answers** based on filtering.

### 3️⃣ Input Validation
- As a **user**, I should not be able to enter a **blank or duplicate** question.
- As a **user**, I should not be able to enter an **answer that is too short or invalid**.
- As a **user**, I should receive **error messages** for invalid inputs.

---

## Installation and Setup
### Prerequisites
- Java 17+ installed
- Maven (if using)
- Git (for cloning repository)

### Steps
1. Clone the repository:
   ```sh
   git clone <YOUR_GITHUB_REPO_URL>
   cd HW2
